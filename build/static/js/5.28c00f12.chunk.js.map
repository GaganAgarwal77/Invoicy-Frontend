{"version":3,"sources":["Invoice/data/initialData.ts","Invoice/styles/styles.ts","Invoice/styles/compose.ts","Invoice/EditableInput.tsx","Invoice/EditableSelect.tsx","Invoice/EditableTextarea.tsx","Invoice/EditableCalendarInput.tsx","Invoice/Document.tsx","Invoice/Page.tsx","Invoice/View.tsx","Invoice/Text.tsx","Invoice/DownloadPDF.tsx","Invoice/InvoicePage.tsx","services/ApiService.js"],"names":["initialProductLine","desc","qty","price","initialInvoice","clientId","companyId","companyName","companyAddr","email","clientName","clientAddr","clientEmail","invoiceId","invoiceDate","dueDate","productLines","advancePercent","note","totalAmount","dueAmount","discount","tax","method","network","workCompleted","isSettled","uploadDocURI","colorGray","styles","dark","color","white","backgroundColor","flex","display","flexDirection","flexWrap","paddingRight","width","row","borderBottom","concat","marginTop","marginBottom","padding","paddingBottom","right","textAlign","bold","fontWeight","fontSize","page","fontFamily","span","logo","compose","classes","css","replace","split","forEach","className","undefined","Object","assign","EditableInput","_ref","placeholder","value","onChange","pdfMode","_jsx","_Fragment","children","Text","style","type","e","target","EditableSelect","options","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","onBlur","autoFocus","map","option","text","readOnly","onFocus","EditableTextarea","rows","TextareaAutosize","minRows","EditableCalendarInput","selected","DatePicker","date","dateFormat","Document","PdfDocument","Page","PdfPage","size","View","PdfView","PdfText","Download","data","show","setShow","useEffect","timeout","setTimeout","clearTimeout","title","PDFDownloadLink","document","InvoicePage","fileName","toLowerCase","Font","register","family","fonts","src","_objectSpread","invoice","setInvoice","_useState3","_useState4","subTotal","setSubTotal","_useState5","_useState6","saleTax","setSaleTax","_useState7","_useState8","setDiscount","_useState9","_useState10","myClients","setMyClients","Date","invoiceDueDate","valueOf","setDate","getDate","myAsyncFunction","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","allClients","res1","clients","res2","company","newInvoice","wrap","_context2","prev","next","ApiService","getAuth","window","localStorage","getItem","sent","console","log","company_name","_ref3","_callee","client","clientID","clientCompany","_context","id","blocked","username","push","name","stop","_x","apply","arguments","handleChange","_ref4","_callee3","clientCompanyId","length","i","_context3","_x2","_x3","handleProductLineChange","index","productLine","newProductLine","includes","n","parseFloat","toString","calculateAmount","quantity","rate","quantityNumber","rateNumber","toFixed","match","discountRate","total","sendInvoice","_ref5","_callee4","finalItems","invoiceData","_context4","item","itemData","postAuth","alert","location","href","t0","_jsxs","format","Array","isArray","slice","onClick","filter","handleRemove","_toConsumableArray","event","API_BASE_URL","_classCallCheck","_createClass","key","url","axios","get","token","headers","Authorization","post","put","patch","delete"],"mappings":"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","file":"static/js/5.28c00f12.chunk.js","sourcesContent":["import { ProductLine, Invoice } from './types'\n\nexport const initialProductLine: ProductLine = {\n  desc: '',\n  qty: '1',\n  price: '0.00',\n}\n\nexport const initialInvoice: Invoice = {\n  clientId:'',\n  companyId:'1',\n  companyName: '',\n  companyAddr: '',\n  email: '',\n  clientName: '',\n  clientAddr: '',\n  clientEmail: '',\n  invoiceId: '1',\n  invoiceDate: '2023-04-15',\n  dueDate: '2023-05-25',\n  productLines: [\n    {\n      desc: 'Item 1',\n      qty: '2',\n      price: '10.00',\n    }\n  ],\n  advancePercent: '50',\n  note: 'It was great doing business with you.',\n  totalAmount: '18.00',\n  dueAmount: '18.00',\n  discount: '20',\n  tax: '10',\n  method: \"ETH\",\n  network: \"Ethereum\",\n\n  workCompleted:\"false\",\n  isSettled: \"false\",\n  uploadDocURI: \"www.google.com\"\n}\n","import { CSSClasses } from '../data/types'\n\nconst colorDark = '#222'\nconst colorDark2 = '#666'\nconst colorGray = '#e3e3e3'\nconst colorWhite = '#fff'\n\nconst styles: CSSClasses = {\n  dark: {\n    color: colorDark,\n  },\n\n  white: {\n    color: colorWhite,\n  },\n\n  'bg-dark': {\n    backgroundColor: colorDark2,\n  },\n\n  'bg-gray': {\n    backgroundColor: colorGray,\n  },\n\n  flex: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n  },\n\n  'w-auto': {\n    flex: 1,\n    paddingRight: '8px',\n  },\n\n  'ml-30': {\n    flex: 1,\n  },\n\n  'w-100': {\n    width: '100%',\n  },\n\n  'w-50': {\n    width: '50%',\n  },\n\n  'w-55': {\n    width: '55%',\n  },\n\n  'w-45': {\n    width: '45%',\n  },\n\n  'w-60': {\n    width: '60%',\n  },\n\n  'w-40': {\n    width: '40%',\n  },\n\n  'w-48': {\n    width: '48%',\n  },\n\n  'w-17': {\n    width: '17%',\n  },\n\n  'w-18': {\n    width: '18%',\n  },\n\n  row: {\n    borderBottom: `1px solid ${colorGray}`,\n  },\n\n  'mt-40': {\n    marginTop: '40px',\n  },\n\n  'mt-30': {\n    marginTop: '30px',\n  },\n\n  'mt-20': {\n    marginTop: '20px',\n  },\n\n  'mt-10': {\n    marginTop: '10px',\n  },\n\n  'mb-5': {\n    marginBottom: '5px',\n  },\n\n  'p-4-8': {\n    padding: '4px 8px',\n  },\n\n  'p-5': {\n    padding: '5px',\n  },\n\n  'pb-10': {\n    paddingBottom: '10px',\n  },\n\n  right: {\n    textAlign: 'right',\n  },\n\n  bold: {\n    fontWeight: 'bold',\n  },\n\n  'fs-20': {\n    fontSize: '20px',\n  },\n\n  'fs-45': {\n    fontSize: '45px',\n  },\n\n  page: {\n    fontFamily: 'Nunito',\n    fontSize: '13px',\n    color: '#555',\n    padding: '40px 35px',\n  },\n\n  span: {\n    padding: '4px 12px 4px 0',\n  },\n\n  logo: {\n    display: 'block',\n  }\n}\n\nexport default styles\n","import ReactPDF from '@react-pdf/renderer'\nimport styles from './styles'\n\nconst compose = (classes: string): ReactPDF.Styles => {\n  const css: ReactPDF.Styles = {}\n\n  const classesArray: string[] = classes.replace(/\\s+/g, ' ').split(' ')\n\n  classesArray.forEach((className) => {\n    if (typeof styles[className] !== undefined) {\n      Object.assign(css, styles[className])\n    }\n  })\n\n  return css\n}\n\nexport default compose\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport compose from './styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n}\n\nconst EditableInput: FC<Props> = ({ className, placeholder, value, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <input\n          type=\"text\"\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableInput\n","import React, { FC, useState } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport compose from './styles/compose'\n\nexport interface SelectOption {\n  value: string\n  text: string\n}\n\ninterface Props {\n  className?: string\n  options?: SelectOption[]\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n}\n\nconst EditableSelect: FC<Props> = ({\n  className,\n  options,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n}) => {\n  const [isEditing, setIsEditing] = useState<boolean>(false)\n\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <>\n          {isEditing ? (\n            <select\n              className={'select ' + (className ? className : '')}\n              value={value}\n              onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n              onBlur={() => setIsEditing(false)}\n              autoFocus={true}\n            >\n              {options?.map((option) => (\n                <option key={option.text} value={option.value}>\n                  {option.text}\n                </option>\n              ))}\n            </select>\n          ) : (\n            <input\n              readOnly={true}\n              type=\"text\"\n              className={'input ' + (className ? className : '')}\n              value={value || ''}\n              placeholder={placeholder || ''}\n              onFocus={() => setIsEditing(true)}\n            />\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default EditableSelect\n","import React, { FC } from 'react'\nimport TextareaAutosize from 'react-textarea-autosize'\nimport { Text } from '@react-pdf/renderer'\nimport compose from './styles/compose'\n\ninterface Props {\n  className?: string\n  placeholder?: string\n  value?: string\n  onChange?: (value: string) => void\n  pdfMode?: boolean\n  rows?: number\n}\n\nconst EditableTextarea: FC<Props> = ({\n  className,\n  placeholder,\n  value,\n  onChange,\n  pdfMode,\n  rows,\n}) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <TextareaAutosize\n          minRows={rows || 1}\n          className={'input ' + (className ? className : '')}\n          placeholder={placeholder || ''}\n          value={value || ''}\n          onChange={onChange ? (e) => onChange(e.target.value) : undefined}\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableTextarea\n","import React, { FC } from 'react'\nimport { Text } from '@react-pdf/renderer'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport compose from './styles/compose'\n\ninterface Props {\n  className?: string\n  value?: string\n  selected?: Date\n  onChange?: (date: Date | [Date, Date] | null) => void\n  pdfMode?: boolean\n}\n\nconst EditableCalendarInput: FC<Props> = ({ className, value, selected, onChange, pdfMode }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <Text style={compose('span ' + (className ? className : ''))}>{value}</Text>\n      ) : (\n        <DatePicker\n          className={'input ' + (className ? className : '')}\n          selected={selected}\n          onChange={onChange ? (date) => onChange(date) : (date) => null}\n          dateFormat=\"MMM dd, yyyy\"\n        />\n      )}\n    </>\n  )\n}\n\nexport default EditableCalendarInput\n","import React, { FC } from 'react'\nimport { Document as PdfDocument } from '@react-pdf/renderer'\n\ninterface Props {\n  pdfMode?: boolean\n}\n\nconst Document: FC<Props> = ({ pdfMode, children }) => {\n  return <>{pdfMode ? <PdfDocument>{children}</PdfDocument> : <>{children}</>}</>\n}\n\nexport default Document\n","import React, { FC } from 'react'\nimport { Page as PdfPage } from '@react-pdf/renderer'\nimport compose from './styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst Page: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfPage size=\"A4\" style={compose('page ' + (className ? className : ''))}>\n          {children}\n        </PdfPage>\n      ) : (\n        <div className={'page ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default Page\n","import React, { FC } from 'react'\nimport { View as PdfView } from '@react-pdf/renderer'\nimport compose from './styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n}\n\nconst View: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfView style={compose('view ' + (className ? className : ''))}>{children}</PdfView>\n      ) : (\n        <div className={'view ' + (className ? className : '')}>{children}</div>\n      )}\n    </>\n  )\n}\n\nexport default View\n","import React, { FC } from 'react'\nimport { Text as PdfText } from '@react-pdf/renderer'\nimport compose from './styles/compose'\n\ninterface Props {\n  className?: string\n  pdfMode?: boolean\n  children?: string\n}\n\nconst Text: FC<Props> = ({ className, pdfMode, children }) => {\n  return (\n    <>\n      {pdfMode ? (\n        <PdfText style={compose('span ' + (className ? className : ''))}>{children}</PdfText>\n      ) : (\n        <span className={'span ' + (className ? className : '')}>{children}</span>\n      )}\n    </>\n  )\n}\n\nexport default Text\n","import React, { FC, useEffect, useState } from 'react'\nimport { PDFDownloadLink } from '@react-pdf/renderer'\nimport { Invoice } from './data/types'\nimport InvoicePage from './InvoicePage'\n\ninterface Props {\n  data: Invoice\n}\n\nconst Download: FC<Props> = ({ data }) => {\n  const [show, setShow] = useState<boolean>(false)\n\n  useEffect(() => {\n    setShow(false)\n\n    const timeout = setTimeout(() => {\n      setShow(true)\n    }, 500)\n\n    return () => clearTimeout(timeout)\n  }, [data])\n\n  return (\n    <div className={'download-pdf ' + (!show ? 'loading' : '')} title=\"Save PDF\">\n      {show && (\n        <PDFDownloadLink\n          document={<InvoicePage pdfMode={true} data={data} />}\n          fileName={`INV_0${data.invoiceId ? data.invoiceId.toLowerCase() : 'invoice'}.pdf`}\n          aria-label=\"Save PDF\"\n        ></PDFDownloadLink>\n      )}\n    </div>\n  )\n}\n\nexport default Download\n","import React, { FC, useState, useEffect } from 'react'\nimport { Invoice, ProductLine } from './data/types'\nimport { initialInvoice, initialProductLine } from './data/initialData'\nimport EditableInput from './EditableInput'\nimport EditableSelect from './EditableSelect'\nimport EditableTextarea from './EditableTextarea'\nimport EditableCalendarInput from './EditableCalendarInput'\nimport { networkList, methodList } from './data/paymentList'\nimport Document from './Document'\nimport Page from './Page'\nimport View from './View'\nimport Text from './Text'\nimport { Font } from '@react-pdf/renderer'\nimport Download from './DownloadPDF'\nimport format from 'date-fns/format'\nimport { Text as PdfText } from '@react-pdf/renderer'\nimport '../assets/invoice-scss/main.scss'\nimport ApiService from '../services/ApiService'\n\nFont.register({\n  family: 'Nunito',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXV3I6Li01BKofINeaE.ttf' },\n    { src: 'https://fonts.gstatic.com/s/nunito/v12/XRXW3I6Li01BKofA6sKUYevN.ttf', fontWeight: 600 },\n  ],\n})\n\ninterface Props {\n  data?: Invoice\n  pdfMode?: boolean\n}\n\nconst InvoicePage: FC<Props> = ({ data, pdfMode }) => {\n  const [invoice, setInvoice] = useState<Invoice>(data ? { ...data } : { ...initialInvoice })\n  const [subTotal, setSubTotal] = useState<number>()\n  const [saleTax, setSaleTax] = useState<number>()\n  const [discount, setDiscount] = useState<number>()\n  \n  const [myClients, setMyClients] = useState<any[]>();\n  const dateFormat = \"yyyy-MM-dd\"\n  const invoiceDate = invoice.invoiceDate !== '' ? new Date(invoice.invoiceDate) : new Date()\n  const invoiceDueDate =\n    invoice.dueDate !== ''\n      ? new Date(invoice.dueDate)\n      : new Date(invoiceDate.valueOf())\n\n  if (invoice.dueDate === '') {\n    invoiceDueDate.setDate(invoiceDueDate.getDate() + 30)\n  }\n\n  const myAsyncFunction = async (): Promise<any> => {\n    let allClients: any[] = [];\n    let res1 = await ApiService.getAuth('/fetch-clients/', window.localStorage.getItem(\"token\"));\n    const clients = res1.data;\n    console.log(clients)\n    const companyId = window.localStorage.getItem(\"user_id\");\n    let res2 = await ApiService.getAuth(`/users/id/${companyId}/`, window.localStorage.getItem(\"token\"));\n    const company = res2.data;\n    console.log(company)\n    const newInvoice = { ...invoice }\n    newInvoice.companyName = company.company_name;\n    newInvoice.email = company.email;\n    newInvoice.companyId = companyId || '';\n    await clients.forEach( async (client: any) => {\n      const clientID = client.client;\n      let res2 = await ApiService.getAuth(`/users/id/${clientID}/`, window.localStorage.getItem(\"token\"));\n      const clientCompany = res2.data;\n      const data = {\n        value : client.client,\n        text: client.client,\n        id: client.client,\n        \"clientId\" : client.client,\n        \"blocked\" : client.blocked,\n        \"discount\" : client.discount,\n        \"name\" : clientCompany.company_name,\n        \"email\": clientCompany.email,\n        \"username\" : clientCompany.username,\n    }\n      allClients.push(data);\n      newInvoice.clientAddr = '';\n      newInvoice.clientId = data.clientId;\n      newInvoice.discount = data.discount;\n      newInvoice.clientName = data.name;\n      newInvoice.clientEmail = data.email;\n      newInvoice.companyAddr = '';\n    });\n    console.log(allClients, newInvoice)\n    // console.log(newInvoice)\n    setInvoice(newInvoice)\n    setMyClients(allClients)\n  }\n\n  const handleChange = async (name: keyof Invoice, value: string | number) => {\n    if (name !== 'productLines') {\n\n      const newInvoice = { ...invoice }\n\n      if (typeof value === 'string') {\n        if(name === \"clientId\") {\n          console.log(value)\n          newInvoice[name] = value;\n          const clientCompanyId = value;\n          let res2 = await ApiService.getAuth(`/users/id/${clientCompanyId}/`, window.localStorage.getItem(\"token\"));\n          const clientCompany = res2.data;\n          newInvoice[\"clientName\"] = clientCompany.company_name;\n          newInvoice[\"clientEmail\"] = clientCompany.email;\n\n          let length = myClients ? myClients.length : 0\n          for(var i = 0; i < length; i++) {\n            const id = myClients ? myClients[i].clientId : null;\n            if(id == value) {\n              newInvoice[\"discount\"] = myClients ? myClients[i].discount : 0;\n              newInvoice[\"clientId\"] = myClients ? myClients[i].clientId : 0;\n            }\n          }          \n        }\n        if(name === \"totalAmount\"){\n          newInvoice[name] = value;\n          if(!pdfMode){ newInvoice[\"dueAmount\"] = value; }\n        }\n        else{\n          newInvoice[name] = value\n        }\n      }\n\n\n      setInvoice(newInvoice)\n  }\n}\n\n  const handleProductLineChange = (index: number, name: keyof ProductLine, value: string) => {\n    const productLines = invoice.productLines.map((productLine, i) => {\n      if (i === index) {\n        const newProductLine = { ...productLine }\n\n        if (name === 'desc') {\n          newProductLine[name] = value\n        } else {\n          if (\n            value[value.length - 1] === '.' ||\n            (value[value.length - 1] === '0' && value.includes('.'))\n          ) {\n            newProductLine[name] = value\n          } else {\n            const n = parseFloat(value)\n\n            newProductLine[name] = (n ? n : 0).toString()\n          }\n        }\n\n        return newProductLine\n      }\n\n      return { ...productLine }\n    })\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleRemove = (i: number) => {\n    const productLines = invoice.productLines.filter((productLine, index) => index !== i)\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const handleAdd = () => {\n    const productLines = [...invoice.productLines, { ...initialProductLine }]\n\n    setInvoice({ ...invoice, productLines })\n  }\n\n  const calculateAmount = (quantity: string, rate: string) => {\n    const quantityNumber = parseFloat(quantity)\n    const rateNumber = parseFloat(rate)\n    const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n    return amount.toFixed(2)\n  }\n  useEffect (() => {\n    myAsyncFunction()\n  },[])\n  useEffect(() => {\n    let subTotal = 0\n\n    invoice.productLines.forEach((productLine) => {\n      const quantityNumber = parseFloat(productLine.qty)\n      const rateNumber = parseFloat(productLine.price)\n      const amount = quantityNumber && rateNumber ? quantityNumber * rateNumber : 0\n\n      subTotal += amount\n    })\n\n    setSubTotal(subTotal)\n  }, [invoice.productLines])\n\n  useEffect(() => {\n    const match = parseFloat(invoice.tax)\n    const taxRate = match ? match : 0\n    const saleTax = subTotal ? (subTotal * taxRate / 100) : 0\n    const discountRate = parseFloat(invoice.discount) ? parseFloat(invoice.discount) : 0\n    const discount = subTotal ? ((subTotal * discountRate) / 100): 0\n    const total = subTotal? subTotal + saleTax - discount : 0\n    setSaleTax(saleTax)\n    setDiscount(discount)\n    handleChange('totalAmount',total.toString())\n  }, [subTotal, invoice.tax,invoice.discount])\n\n\n\n   const sendInvoice = async (): Promise<any> =>  {\n    let data = {...invoice}\n\n    let finalItems : any[] = []\n    data.productLines.forEach((item:any) => {\n        let itemData : any = {};\n        itemData['description'] = item.desc\n        itemData['quantity'] = item.qty\n        itemData['price'] = item.price\n        itemData['discount'] = data.discount\n        itemData['tax'] = data.tax\n        finalItems.push(itemData);\n    })\n    console.log(finalItems);\n  let invoiceData =  {\n    \"client\": data.clientId,\n    \"invoiceDate\":data.invoiceDate,\n    \"dueDate\": data.dueDate,\n    \"totalAmount\": data.totalAmount,\n    \"advancePercent\": data.advancePercent,\n    \"note\": data.note,\n    \"items\" :finalItems,\n  }\n  console.log(invoiceData);\n\n  try{\n  let result = await ApiService.postAuth(\"/add-invoice/\", invoiceData, window.localStorage.getItem(\"token\"));\n  window.alert('Invoice Created')\n  window.location.href = '/dashboard'\n  }\n  catch(e) {\n    window.alert(\"Error...\")\n    console.log(e)\n  }\n  }\n\n  return (\n    <Document pdfMode={pdfMode}>\n      <Page className=\"invoice-wrapper\" pdfMode={pdfMode}>\n        {!pdfMode && <Download data={invoice} />}\n\n        <View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50\" pdfMode={pdfMode}>\n\n            <EditableInput\n              className=\"fs-20 bold\"\n              placeholder=\"Your Company\"\n              value={invoice.companyName}\n              pdfMode={pdfMode}\n            />\n\n            <EditableInput\n              placeholder=\"Email Address\"\n              value={invoice.email}\n              \n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-50\" pdfMode={pdfMode}>        \n            <EditableInput\n              className=\"fs-45 right bold\"\n              placeholder=\"Invoice\"\n              value={\"INVOICE\"}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n\n\n\n        <View className=\"flex mt-40\" pdfMode={pdfMode}>\n          \n          <View className=\"w-55\" pdfMode={pdfMode}>\n            \n              {pdfMode ? (\n              <PdfText style={{fontSize:'16px',fontWeight:'bold' }}>Bill To:</PdfText>\n            ) : (\n              <PdfText style={{fontSize:'16px',fontWeight:'bold'}}>Bill To:</PdfText>\n            )}    \n            <EditableInput\n              placeholder=\"Your Client's Name\"\n              value={invoice.clientName}\n              pdfMode={pdfMode}\n            />\n            {console.log(myClients, myClients?.map((client) => {return client.clientId}))}\n            {pdfMode ? (\n              <PdfText style={{fontSize:'10px'}}>{invoice.clientId}</PdfText>\n            ) : (\n                  <EditableSelect\n                    placeholder=\"Your Client's ID\"\n                    options = {myClients}\n                    value={invoice.clientId}\n                    onChange={(value) => handleChange('clientId', value)}\n                    pdfMode={pdfMode}\n                    />            \n            )}\n            <EditableInput\n              placeholder=\"Email Address\"\n              value={invoice.clientEmail}\n              pdfMode={pdfMode}\n            />\n          </View>\n          \n          <View className=\"w-45\" pdfMode={pdfMode}>\n            \n            <View className=\"flex mb-1\" pdfMode={pdfMode}>\n            <View className=\"w-40\" pdfMode={pdfMode}>\n              {pdfMode ? (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold' }}>Invoice#</PdfText>\n            ) : (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Invoice#</PdfText>\n            )}    \n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableInput\n                  placeholder=\"01\"\n                  value={invoice.invoiceId}\n                  onChange={(value) => handleChange('invoiceId', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            \n            <View className=\"flex mb-1\" pdfMode={pdfMode}>\n            <View className=\"w-40\" pdfMode={pdfMode}>\n              {pdfMode ? (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold' }}>Invoice Date</PdfText>\n            ) : (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Invoice Date</PdfText>\n            )}    \n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDate, dateFormat)}\n                  selected={invoiceDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'invoiceDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            \n            <View className=\"flex mb-1\" pdfMode={pdfMode}>\n            <View className=\"w-40\" pdfMode={pdfMode}>\n              {pdfMode ? (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold' }}>Due Date</PdfText>\n            ) : (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Due Date</PdfText>\n            )}    \n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n                <EditableCalendarInput\n                  value={format(invoiceDueDate, dateFormat)}\n                  selected={invoiceDueDate}\n                  onChange={(date) =>\n                    handleChange(\n                      'dueDate',\n                      date && !Array.isArray(date) ? format(date, dateFormat) : ''\n                    )\n                  }\n                  pdfMode={pdfMode}\n                />\n              </View>\n            </View>\n            \n\n            <View className=\"flex mb-1\" pdfMode={pdfMode}>\n              <View className=\"w-40\" pdfMode={pdfMode}>\n              {pdfMode ? (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold' }}>Advance Payment</PdfText>\n            ) : (\n              <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Advance Payment</PdfText>\n            )}    \n              </View>\n              <View className=\"w-17\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.advancePercent + '%'}\n                  onChange={(value) => handleChange('advancePercent', value.slice(0,-1))}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-60\" pdfMode={pdfMode}>\n              <Text className=\"dark w-auto\" pdfMode={pdfMode}>\n              {'INR ' + (typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined'\n                ? (parseFloat(invoice.totalAmount) * (parseFloat(invoice.advancePercent)/100))\n                : 0\n              ).toFixed(2)}\n            </Text>\n              </View>\n            </View>\n            \n          </View>\n        </View>\n\n\n\n        <View className=\"mt-30 bg-dark flex\" pdfMode={pdfMode}>\n          <View className=\"w-48 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold\"\n              value={\"Item Description\"}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={\"Qty\"}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-17 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={\"Rate\"}\n              pdfMode={pdfMode}\n            />\n          </View>\n          <View className=\"w-18 p-4-8\" pdfMode={pdfMode}>\n            <EditableInput\n              className=\"white bold right\"\n              value={\"Amount\"}\n              pdfMode={pdfMode}\n            />\n          </View>\n        </View>\n\n\n\n        {invoice.productLines.map((productLine, i) => {\n          return pdfMode && productLine.desc === '' ? (\n            <Text key={i}></Text>\n          ) : (\n            <View key={i} className=\"row flex ml-0 mr-0\" pdfMode={pdfMode}>\n              <View className=\"w-48 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableTextarea\n                  className=\"dark\"\n                  rows={2}\n                  placeholder=\"Enter item name/description\"\n                  value={productLine.desc}\n                  onChange={(value) => handleProductLineChange(i, 'desc', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.qty}\n                  onChange={(value) => handleProductLineChange(i, 'qty', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-17 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <EditableInput\n                  className=\"dark right\"\n                  value={productLine.price}\n                  onChange={(value) => handleProductLineChange(i, 'price', value)}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-18 p-4-8 pb-10\" pdfMode={pdfMode}>\n                <Text className=\"dark right\" pdfMode={pdfMode}>\n                  {calculateAmount(productLine.qty, productLine.price)}\n                </Text>\n              </View>\n              {!pdfMode && (\n                <button\n                  className=\"link row__remove\"\n                  aria-label=\"Remove Row\"\n                  title=\"Remove Row\"\n                  onClick={() => handleRemove(i)}\n                >\n                  <span className=\"icon icon-remove bg-red\"></span>\n                </button>\n              )}\n            </View>\n          )\n        })}\n\n<View className=\"flex\" pdfMode={pdfMode}>\n          <View className=\"w-50 mt-10\" pdfMode={pdfMode}>\n            {!pdfMode && (\n              <button className=\"link\" onClick={handleAdd}>\n                <span className=\"icon icon-add bg-green mr-10\"></span>\n                Add Line Item\n              </button>\n            )}\n          </View>\n          <View className=\"w-50 mt-20\" pdfMode={pdfMode}>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-1 \" pdfMode={pdfMode}>\n                  {pdfMode ? (\n                  <PdfText style={{fontSize:'12px',fontWeight:'bold'}}>Sub Total</PdfText>\n                ) : (\n                  <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Sub Total</PdfText>\n                )}    \n              </View>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {'INR '+subTotal?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                {pdfMode ? (\n                <PdfText style={{fontSize:'12px',fontWeight:'bold' }}>Sale Tax</PdfText>\n              ) : (\n                <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Sale Tax</PdfText>\n              )}    \n                </View>\n              <View className=\"w-25 p-1\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.tax + '%'}\n                  onChange={(value) => handleChange('tax', value.slice(0,-1))}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {'INR '+ saleTax?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                {pdfMode ? (\n                <PdfText style={{fontSize:'12px',fontWeight:'bold' }}>Discount</PdfText>\n              ) : (\n                <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Discount</PdfText>\n              )}    \n                </View>\n              <View className=\"w-25 p-1\" pdfMode={pdfMode}>\n                <EditableInput\n                  value={invoice.discount +'%'}\n                  onChange={(value) => handleChange('discount', value.slice(0,-1))}\n                  pdfMode={pdfMode}\n                />\n              </View>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {'INR '+discount?.toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            <View className=\"flex bg-gray\" pdfMode={pdfMode}>\n            <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                {pdfMode ? (\n                <PdfText style={{fontSize:'12px',fontWeight:'bold' }}>Total</PdfText>\n              ) : (\n                <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Total</PdfText>\n              )}    \n                </View>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {'INR '+(typeof subTotal !== 'undefined' && typeof saleTax !== 'undefined' && typeof discount !== 'undefined'\n                    ? subTotal + saleTax - discount\n                    : 0\n                  ).toFixed(2)}\n                </Text>\n              </View>\n            </View>\n            \n            {\n              pdfMode && \n              <View className=\"flex bg-gray\" pdfMode={pdfMode}>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                  {pdfMode ? (\n                  <PdfText style={{fontSize:'12px',fontWeight:'bold' }}>Total Due</PdfText>\n                ) : (\n                  <PdfText style={{fontSize:'14px',fontWeight:'bold'}}>Total Due</PdfText>\n                )}    \n                  </View>\n              <View className=\"w-50 p-1\" pdfMode={pdfMode}>\n                <Text className=\"right bold dark\" pdfMode={pdfMode}>\n                  {'INR '+ parseFloat(invoice.dueAmount).toFixed(2)}\n                </Text>\n              </View>\n          </View>\n            }\n          </View>\n          \n</View>\n\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            value={\"Notes\"}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={invoice.note}\n            onChange={(value) => handleChange('note', value)}\n            pdfMode={pdfMode}\n          />\n        </View>\n        <View className=\"mt-20\" pdfMode={pdfMode}>\n          <EditableInput\n            className=\"bold w-100\"\n            value={\"Terms & Conditions\"}\n            pdfMode={pdfMode}\n          />\n          <EditableTextarea\n            className=\"w-100\"\n            rows={2}\n            value={\"Please make the payment by the due date.\"}\n            pdfMode={pdfMode}\n          />\n        </View>\n        {!pdfMode && <button className='btn btn-primary'  onClick={(event:any) => {sendInvoice()}}>Send</button>}\n        \n      </Page>\n    </Document>\n  )\n}\n\nexport default InvoicePage\n","import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\nclass ApiService {\n\n\n    get(url) {\n        return axios.get(API_BASE_URL + url);\n    }\n\n    getAuth(url,  token) {\n        return axios.get(API_BASE_URL + url,\n            { headers: {\n                Authorization: 'Token ' + token}\n            });\n    }\n\n    post(url, data) { \n        return axios.post(API_BASE_URL + url, data);\n    }\n\n    postAuth(url, data, token) {\n        return axios.post(API_BASE_URL + url, data, \n            { headers: {\n                Authorization: 'Token ' + token}\n            });\n    }\n\n    put(url, data) {\n        return axios.put(API_BASE_URL + url, data);\n    }\n\n\n    patchAuth(url, data, token) {\n        return axios.patch(API_BASE_URL + url, data, \n            { headers: {\n                Authorization: 'Token ' + token}\n            });\n    }\n\n    delete(url) {\n        return axios.delete(API_BASE_URL + url);\n    }\n}\n\nexport default new ApiService();"],"sourceRoot":""}