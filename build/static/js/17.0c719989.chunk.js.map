{"version":3,"sources":["pages/Dashboard.js","services/ApiService.js"],"names":["pieChartData","key","y","color","lineChart","raised","pending","i","push","parseInt","Math","sin","abs","values","area","Dashboard","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","companyId","window","localStorage","getItem","clients","topInvoices","isBlockedClientsCollapsed","_createClass","value","_getClients","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","res1","_this2","wrap","_context2","prev","next","this","ApiService","getAuth","sent","data","console","log","forEach","_ref","_callee","client","res2","company","res3","invoices","newClient","_context","concat","invoice","_objectSpread","company_name","email","setState","_toConsumableArray","blocked","discount","length","username","stop","_x","apply","arguments","t0","getClients","a","b","dueAmount","sort","compareFilterTopInvoices","slice","history","pathname","_updateWorkStatus","_callee3","invoiceId","result","_context3","patchAuth","workCompleted","note","dialog","showAlert","location","reload","_x2","_this3","topPendingInvoices","blockedClients","filterTopInvoices","_jsxs","className","children","_jsx","style","width","src","avatar2","alt","clientName","clientEmail","invoiceDate","dueDate","border","onClick","viewDetails","updateWorkStatus","id","Dialog","ref","component","numInvoices","Link","to","clientId","Aux","Row","Col","md","xl","Card","Body","Header","Title","as","NVD3Chart","height","type","datum","x","React","createElement","xAxis","tickFormat","d","axisLabel","yAxis","parseFloat","toFixed","renderEnd","Table","responsive","hover","Button","Collapse","in","Component","API_BASE_URL","url","axios","get","token","headers","Authorization","post","put","patch","delete"],"mappings":"0UAcMA,EAAe,CACjB,CAACC,IAAK,cAAeC,EAAG,GAAIC,MAAO,WACnC,CAACF,IAAK,eAAgBC,EAAG,GAAIC,MAAO,WACpC,CAACF,IAAK,gBAAiBC,EAAG,GAAIC,MAAO,YAGzC,SAASC,IAGL,IAFA,IAAIC,EAAS,GACTC,EAAU,GACLC,EAAI,EAAGA,EAAI,GAAIA,IACpBF,EAAOG,KAAK,CACR,EAAKD,EACL,EAAKE,SAAS,IAAsB,IAAlBC,KAAKC,IAAIJ,EAAE,KAAc,OAE/CD,EAAQE,KAAK,CACT,EAAKD,EACL,EAAKE,SAAS,EAAEC,KAAKE,IAAKF,KAAKC,IAAIJ,EAAE,IAAK,OAGlD,MAAO,CACH,CACIM,OAAQR,EACRJ,IAAK,kBACLE,MAAO,UACPW,MAAM,GAEV,CACID,OAAQP,EACRL,IAAK,mBACLE,MAAO,UACPW,MAAM,GAGlB,CAAC,IAGKC,EAAS,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAEX,SAAAA,EAAaK,GAAQ,IAADC,EAOd,OAPcC,YAAA,KAAAP,IAChBM,EAAAH,EAAAK,KAAA,KAAMH,IACDI,MAAQ,CACXC,UAAWC,OAAOC,aAAaC,QAAQ,WACvCC,QAAS,GACTC,YAAa,GACbC,2BAA2B,GAC3BV,CACN,CAiVC,OA/UDW,YAAAjB,EAAA,EAAAd,IAAA,aAAAgC,MAAA,eAAAC,EAAAC,YAAAC,IAAAC,MACA,SAAAC,IAAA,IAAAC,EAAAV,EAAAW,EAAA,YAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACiD,OAApBC,KAAKrB,MAAMC,UAASiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAExBE,IAAWC,QAAQ,kBAAmBrB,OAAOC,aAAaC,QAAQ,UAAU,KAAD,EAAxFW,EAAIG,EAAAM,KACFnB,EAAUU,EAAKU,KACrBC,QAAQC,IAAItB,GACZA,EAAQuB,QAAO,eAAAC,EAAAlB,YAAAC,IAAAC,MAAC,SAAAiB,EAAMC,GAAM,IAAA9B,EAAA+B,EAAAC,EAAAC,EAAAC,EAAAV,EAAAW,EAAA,OAAAxB,IAAAK,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACO,OAAzBnB,EAAY8B,EAAOA,OAAMM,EAAAjB,KAAA,EACdE,IAAWC,QAAQ,aAADe,OAAcrC,EAAS,KAAKC,OAAOC,aAAaC,QAAQ,UAAU,KAAD,EAE/E,OAFjB4B,EAAIK,EAAAb,KACFS,EAAUD,EAAKP,KACrBC,QAAQC,IAAIM,GAASI,EAAAjB,KAAA,EACJE,IAAWC,QAAQ,mBAADe,OAAoBrC,EAAS,KAAKC,OAAOC,aAAaC,QAAQ,UAAU,KAAD,EAAtG8B,EAAIG,EAAAb,KACFW,EAAWD,EAAKT,KACtBC,QAAQC,IAAIQ,GACZA,EAASP,SAAQ,SAAAW,GACbA,EAAOC,wBAAA,GAAOD,GAAO,IAAE,WAAcN,EAAQQ,aAAc,YAAeR,EAAQS,QAClF1B,EAAK2B,SAAS,CACVrC,YAAY,GAADgC,OAAAM,YAAK5B,EAAKhB,MAAMM,aAAW,CAAEiC,KAEhD,IAEMd,EAAO,CACT,SAAaM,EAAOA,OACpB,QAAYA,EAAOc,QACnB,SAAad,EAAOe,SACpB,KAASb,EAAQQ,aACjB,YAAeN,EAASY,OACxB,MAASd,EAAQS,MACjB,SAAaT,EAAQe,UAEnBZ,EAAY,CAAC,GAAML,EAAOA,OAAQ,KAAQN,GAChDT,EAAK2B,SAAS,CACVtC,QAAQ,GAADiC,OAAAM,YAAM5B,EAAKhB,MAAMK,SAAO,CAAE+B,MAClC,yBAAAC,EAAAY,OAAA,GAAAnB,EAAA,KAEN,gBAAAoB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,EA7Bc,IA6BblC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmC,GAAAnC,EAAA,SAIFQ,QAAQC,IAAGT,EAAAmC,IAAI,yBAAAnC,EAAA+B,OAAA,GAAAnC,EAAA,mBAEtB,yBAAAJ,EAAAyC,MAAA,KAAAC,UAAA,EA1CD,IA0CC,CAAA3E,IAAA,oBAAAgC,MAED,WACIY,KAAKiC,YACT,GAAC,CAAA7E,IAAA,2BAAAgC,MAED,SAAyB8C,EAAGC,GACxB,OAAGD,EAAEE,UAAYD,EAAEC,UAAkB,EAClCF,EAAEE,UAAYD,EAAEC,WAAmB,EAC/B,CACX,GAEA,CAAAhF,IAAA,oBAAAgC,MACA,WACI,IAAI0B,EAAWd,KAAKrB,MAAMM,YAE1B,OADA6B,EAASuB,KAAKrC,KAAKsC,0BACZxB,EAASyB,MAAM,EAAE,EAC5B,GAAC,CAAAnF,IAAA,cAAAgC,MAED,SAAY8B,GACRlB,KAAKzB,MAAMiE,QAAQ7E,KAAK,CACpB8E,SAAU,iBACV9D,MAAO,CAAEuC,QAASA,IAE1B,GAAC,CAAA9D,IAAA,mBAAAgC,MAAA,eAAAsD,EAAApD,YAAAC,IAAAC,MACD,SAAAmD,EAAuBC,GAAS,IAAAC,EAAA,OAAAtD,IAAAK,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACPE,IAAW8C,UAAU,YAAD9B,OAAa2B,EAAS,KAAK,CAACI,cAAe,OAAQC,KAAM,aAAcpE,OAAOC,aAAaC,QAAQ,UAAU,KAAD,EAA/I8D,EAAMC,EAAA3C,KACZE,QAAQC,IAAIuC,GACTA,GACC7C,KAAKkD,OAAOC,UAAU,YACtBtE,OAAOuE,SAASC,UAGhBrD,KAAKkD,OAAOC,UAAU,yBACzB,wBAAAL,EAAAlB,OAAA,GAAAe,EAAA,UACJ,gBAAAW,GAAA,OAAAZ,EAAAZ,MAAA,KAAAC,UAAA,EAXA,IAWA,CAAA3E,IAAA,SAAAgC,MACD,WAAU,IAADmE,EAAA,KACDC,EAAqB,GACrBxE,EAAU,GACVyE,EAAiB,GA0GrB,OAvGezD,KAAK0D,oBAEXnD,SAAQ,SAAAW,GACbsC,EAAmB7F,KACfgG,eAAA,MAAIC,UAAU,SAAQC,SAAA,CAClBC,cAAA,MAAAD,SAAIC,cAAA,OAAKF,UAAU,iBAAiBG,MAAO,CAACC,MAAO,QAASC,IAAKC,IAASC,IAAI,oBAC9ER,eAAA,MAAAE,SAAA,CACIC,cAAA,MAAIF,UAAU,OAAMC,SAAE3C,EAAQkD,aAC9BN,cAAA,KAAGF,UAAU,MAAKC,SAAE3C,EAAQmD,iBAEhCP,cAAA,MAAAD,SACIF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAACC,cAAA,KAAGF,UAAU,0CAA0C1C,EAAQoD,iBAE9FR,cAAA,MAAAD,SACIF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAACC,cAAA,KAAGF,UAAU,wCAAwC1C,EAAQqD,aAE5FT,cAAA,MAAAD,SACIF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAAC,oBAEvB3C,EAAQ8B,eACRc,cAAA,QAAMF,UAAU,eAAcC,SAAC,eAG9B3C,EAAQ8B,eACTc,cAAA,QAAMF,UAAU,cAAaC,SAAC,uBAItCC,cAAA,MAAAD,SACIF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAAE3C,EAAQkB,UAAU,gBAElDuB,eAAA,MAAAE,SAAA,CACIC,cAAA,UAAQC,MAAO,CAACS,OAAQ,GAAIC,QAAS,kBAAMlB,EAAKmB,YAAYxD,EAAQ,EAAE0C,UAAU,kCAAiCC,SAAC,iBAClHF,eAAA,UAAQI,MAAO,CAACS,OAAQ,GAAIC,QAAS,kBAAMlB,EAAKoB,iBAAiBzD,EAAQ0D,GAAG,EAAEhB,UAAU,iCAAgCC,SAAA,EAE/G3C,EAAQ8B,eACT,kBAGA9B,EAAQ8B,eACR,qBAGRc,cAAA,UAAQC,MAAO,CAACS,OAAQ,GAAIC,QAAS,WAAOlB,EAAKL,OAAOC,UAAU,iBAAiB,EAAGS,UAAU,iCAAgCC,SAAC,WACjIC,cAACe,IAAM,CAACC,IAAK,SAACC,GAAgBxB,EAAKL,OAAS6B,CAAU,SAxChC7D,EAAQ0D,IA4C9C,IAEA5E,KAAKrB,MAAMK,QAAQuB,SAAQ,SAAAG,GACnBA,EAAON,KAAKoB,QA0BZiC,EAAe9F,KACfgG,eAAA,MAAIC,UAAU,SAAQC,SAAA,CAClBC,cAAA,MAAAD,SAAIC,cAAA,OAAKF,UAAU,iBAAiBG,MAAO,CAACC,MAAO,QAASC,IAAKC,IAASC,IAAI,oBAC9EL,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKuB,aAEpCmC,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKgB,iBAEpC0C,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKiB,UAEpCyC,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKqB,aAEpCqC,cAAA,MAAAD,SACIF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAAEnD,EAAON,KAAK4E,YAAY,iBAExDlB,cAAA,MAAAD,SACIC,cAACmB,IAAI,CAACC,GAAI,YAAYxE,EAAON,KAAK+E,SAAUvB,UAAU,iCAAgCC,SAAC,qBAlBjEnD,EAAOkE,KA1BrC5F,EAAQrB,KACRgG,eAAA,MAAIC,UAAU,SAAQC,SAAA,CAClBC,cAAA,MAAAD,SAAIC,cAAA,OAAKF,UAAU,iBAAiBG,MAAO,CAACC,MAAO,QAASC,IAAKC,IAASC,IAAI,oBAC9EL,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKuB,aAEpCmC,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKgB,iBAEpC0C,cAAA,MAAAD,SACIC,cAAA,KAAGF,UAAU,MAAKC,SAAEnD,EAAON,KAAKiB,UAEpCyC,cAAA,MAAAD,SACIF,eAAA,KAAGC,UAAU,MAAKC,SAAA,CAAC,aAAWnD,EAAON,KAAKqB,SAAS,SAEvDqC,cAAA,MAAAD,SACIF,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAAEnD,EAAON,KAAK4E,YAAY,iBAExDlB,cAAA,MAAAD,SACIC,cAACmB,IAAI,CAACC,GAAI,YAAYxE,EAAON,KAAK+E,SAAUvB,UAAU,iCAAgCC,SAAC,qBAlBjEnD,EAAOkE,IAgD7C,IAGId,cAACsB,IAAG,CAAAvB,SACAF,eAAC0B,IAAG,CAAAxB,SAAA,CAEAC,cAACwB,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAE3B,SACdC,cAAC2B,IAAI,CAAA5B,SACDF,eAAC8B,IAAKC,KAAI,CAAA7B,SAAA,CACNC,cAAA,MAAIF,UAAU,OAAMC,SAAC,6BACrBC,cAAA,OAAKF,UAAU,gCAA+BC,SAC1CC,cAAA,OAAKF,UAAU,QAAOC,SAClBF,eAAA,MAAIC,UAAU,0CAAyCC,SAAA,CAACC,cAAA,KAAGF,UAAU,sCAAsC5D,KAAKrB,MAAMM,YAAYyC,qBAMtJoC,cAACwB,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAE3B,SACdC,cAAC2B,IAAI,CAAA5B,SACDF,eAAC8B,IAAKC,KAAI,CAAA7B,SAAA,CACNC,cAAA,MAAIF,UAAU,OAAMC,SAAC,2BACrBC,cAAA,OAAKF,UAAU,gCAA+BC,SAC1CC,cAAA,OAAKF,UAAU,QAAOC,SAClBF,eAAA,MAAIC,UAAU,0CAAyCC,SAAA,CAACC,cAAA,KAAGF,UAAU,iDAAiDJ,EAAmB9B,qBAM7JoC,cAACwB,IAAG,CAACE,GAAI,EAAE3B,SACPC,cAAC2B,IAAI,CAAA5B,SACDF,eAAC8B,IAAKC,KAAI,CAAA7B,SAAA,CACNC,cAAA,MAAIF,UAAU,OAAMC,SAAC,kBACrBC,cAAA,OAAKF,UAAU,gCAA+BC,SAC1CC,cAAA,OAAKF,UAAU,QAAOC,SAClBF,eAAA,MAAIC,UAAU,0CAAyCC,SAAA,CAACC,cAAA,KAAGF,UAAU,kCAAiC,IAAE5D,KAAKrB,MAAMK,QAAQ0C,qBAQ/IoC,cAACwB,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAE3B,SACdF,eAAC8B,IAAI,CAAA5B,SAAA,CACDC,cAAC2B,IAAKE,OAAM,CAAA9B,SACRF,eAAC8B,IAAKG,MAAK,CAACC,GAAG,KAAIhC,SAAA,CAAC,4BAAyBC,cAAA,SAAAD,SAAO,sBAExDC,cAAC2B,IAAKC,KAAI,CAAC9B,UAAU,cAAaC,SAClCC,cAACgC,IAAS,CAAClB,GAAG,QAAQmB,OAAQ,IAAKC,KAAK,WAAWC,MAAO9I,EAAc+I,EAAE,MAAM7I,EAAE,aAI1FyG,cAACwB,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAE3B,SACdF,eAAC8B,IAAI,CAAC7B,UAAU,eAAcC,SAAA,CAC1BC,cAAC2B,IAAKE,OAAM,CAAA9B,SACRF,eAAC8B,IAAKG,MAAK,CAACC,GAAG,KAAIhC,SAAA,CAAC,kBAAeC,cAAA,SAAAD,SAAO,4BAE9CC,cAAC2B,IAAKC,KAAI,CAAC9B,UAAU,cAAaC,SAC9BC,cAAA,OAAAD,SAEQsC,IAAMC,cAAcN,IAAW,CAC3BO,MAAO,CACHC,WAAY,SAASC,GAAI,OAAOA,CAAG,EACnCC,UAAW,eAEfC,MAAO,CACHD,UAAW,iBACXF,WAAY,SAASC,GAAI,OAAOG,WAAWH,GAAGI,QAAQ,EAAI,GAE9DX,KAAK,YACLC,MAAO1I,IACP2I,EAAG,IACH7I,EAAG,IACH0I,OAAQ,IACRa,UAAW,WACPvG,QAAQC,IAAI,YAChB,aASxBwD,cAACwB,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAG3B,SAChBF,eAAC8B,IAAI,CAAC7B,UAAU,eAAcC,SAAA,CAC1BC,cAAC2B,IAAKE,OAAM,CAAA9B,SACRC,cAAC2B,IAAKG,MAAK,CAACC,GAAG,KAAIhC,SAAC,8BAExBC,cAAC2B,IAAKC,KAAI,CAAC9B,UAAU,YAAWC,SAChCC,cAAC+C,IAAK,CAACC,YAAU,EAACC,OAAK,EAAAlD,SACvBC,cAAA,SAAAD,SACKL,aAQbM,cAACwB,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAG3B,SAChBF,eAAC8B,IAAI,CAAC7B,UAAU,eAAcC,SAAA,CAC1BC,cAAC2B,IAAKE,OAAM,CAAA9B,SACRF,eAAC8B,IAAKG,MAAK,CAACC,GAAG,KAAIhC,SAAA,CAAC,WAAQC,cAACmB,IAAI,CAACC,GAAG,eAAcrB,SAACC,cAAA,KAAGF,UAAU,+CAErEE,cAAC2B,IAAKC,KAAI,CAAC9B,UAAU,YAAWC,SAChCC,cAAC+C,IAAK,CAACC,YAAU,EAACC,OAAK,EAAAlD,SACvBC,cAAA,SAAAD,SACK7E,aAQb8E,cAACwB,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAG3B,SAChBF,eAAC8B,IAAI,CAAC7B,UAAU,kDAAiDC,SAAA,CAC7DC,cAAC2B,IAAKE,OAAM,CAAA9B,SACRF,eAACqD,IAAM,CAACvC,QAAS,kBAAMlB,EAAKjC,SAAS,CAAEpC,2BAA4BqE,EAAK5E,MAAMO,2BAA4B,EAAC2E,SAAA,EAEtG7D,KAAKrB,MAAMO,2BACZ,uBAGAc,KAAKrB,MAAMO,2BACX,6BAIR4E,cAACmD,IAAQ,CAACC,GAAIlH,KAAKrB,MAAMO,0BAA0B2E,SAC/CC,cAAA,OAAKc,GAAG,iBAAgBf,SACpBC,cAAC2B,IAAKC,KAAI,CAAC9B,UAAU,YAAWC,SAC5BC,cAAC+C,IAAK,CAACC,YAAU,EAACC,OAAK,EAAAlD,SACnBC,cAAA,SAAAD,SACKJ,qBAY7C,KAACvF,CAAA,CA3VU,CAASiI,IAAMgB,WA8VfjJ,W,+DC9YTkJ,EAAe,wBACfnH,EAAU,oBAAAA,IAAAxB,YAAA,KAAAwB,EAAA,CAuCX,OAvCWd,YAAAc,EAAA,EAAA7C,IAAA,MAAAgC,MAGZ,SAAIiI,GACA,OAAOC,IAAMC,IAAIH,EAAeC,EACpC,GAAC,CAAAjK,IAAA,UAAAgC,MAED,SAAQiI,EAAMG,GACV,OAAOF,IAAMC,IAAIH,EAAeC,EAC5B,CAAEI,QAAS,CACPC,cAAe,SAAWF,IAEtC,GAAC,CAAApK,IAAA,OAAAgC,MAED,SAAKiI,EAAKjH,GACN,OAAOkH,IAAMK,KAAKP,EAAeC,EAAKjH,EAC1C,GAAC,CAAAhD,IAAA,WAAAgC,MAED,SAASiI,EAAKjH,EAAMoH,GAChB,OAAOF,IAAMK,KAAKP,EAAeC,EAAKjH,EAClC,CAAEqH,QAAS,CACPC,cAAe,SAAWF,IAEtC,GAAC,CAAApK,IAAA,MAAAgC,MAED,SAAIiI,EAAKjH,GACL,OAAOkH,IAAMM,IAAIR,EAAeC,EAAKjH,EACzC,GAAC,CAAAhD,IAAA,YAAAgC,MAGD,SAAUiI,EAAKjH,EAAMoH,GACjB,OAAOF,IAAMO,MAAMT,EAAeC,EAAKjH,EACnC,CAAEqH,QAAS,CACPC,cAAe,SAAWF,IAEtC,GAAC,CAAApK,IAAA,SAAAgC,MAED,SAAOiI,GACH,OAAOC,IAAMQ,OAAOV,EAAeC,EACvC,KAACpH,CAAA,CAvCW,GA0CD,QAAIA,C","file":"static/js/17.0c719989.chunk.js","sourcesContent":["import React from 'react';\nimport {Row, Col, Card, Table, Button, Collapse} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport Aux from \"../hoc/_Aux\";\n\n\nimport avatar2 from '../assets/images/user/avatar-2.jpg';\n\nimport NVD3Chart from 'react-nvd3';\nimport Dialog from 'react-bootstrap-dialog';\nimport ApiService from '../services/ApiService';\n\n\nconst pieChartData = [\n    {key: \"50% Advance\", y: 40, color: \"#1ddec5\"},\n    {key: \"100% Advance\", y: 30, color: \"#1dcfda\"},\n    {key: \"100% Postwork\", y: 30, color: \"#20c997\"},\n];\n\nfunction lineChart() {\n    var raised = [],\n        pending = [];\n    for (var i = 0; i < 10; i++) {\n        raised.push({\n            'x': i,\n            'y': parseInt(15*(Math.sin(i/1.5) * 0.25 + 0.5))\n        });\n        pending.push({\n            'x': i,\n            'y': parseInt(3/Math.abs((Math.sin(i/20))+0.5))\n        });\n    }\n    return [\n        {\n            values: raised,\n            key: 'Invoices Raised',\n            color: '#239f1c',\n            area: true\n        },\n        {\n            values: pending,\n            key: 'Pending Invoices',\n            color: '#F45d55',\n            area: true\n        }\n    ];\n}\n\n\nclass Dashboard extends React.Component {\n\n    constructor (props) {\n        super(props);        \n        this.state = {\n          companyId: window.localStorage.getItem(\"user_id\"),\n          clients: [],\n          topInvoices: [],\n          isBlockedClientsCollapsed: false,\n        };\n    }\n\n    /*Set both clients and topInvoices state vars*/\n    async getClients(){\n        const currentCompanyId = this.state.companyId;\n        try{\n            let res1 = await ApiService.getAuth('/fetch-clients/', window.localStorage.getItem(\"token\"));\n            const clients = res1.data;\n            console.log(clients);\n            clients.forEach(async client => {\n                const companyId = client.client\n                let res2 = await ApiService.getAuth(`/users/id/${companyId}/`, window.localStorage.getItem(\"token\"));\n                const company = res2.data;\n                console.log(company);\n                let res3 = await ApiService.getAuth(`/client-invoice/${companyId}/`, window.localStorage.getItem(\"token\"));\n                const invoices = res3.data;\n                console.log(invoices);\n                invoices.forEach(invoice => {\n                    invoice = {...invoice, 'clientName': company.company_name, 'clientEmail': company.email }\n                    this.setState({\n                        topInvoices:[...this.state.topInvoices, invoice]\n                    });\n                })\n\n                const data = {\n                    \"clientId\" : client.client,\n                    \"blocked\" : client.blocked,\n                    \"discount\" : client.discount,\n                    \"name\" : company.company_name,\n                    \"numInvoices\": invoices.length,\n                    \"email\": company.email,\n                    \"username\" : company.username,\n                }\n                const newClient = {'id': client.client, 'data': data}\n                this.setState({\n                    clients: [...this.state.clients, newClient]\n                });\n    \n            })\n            \n\n        } catch(e){\n            console.log(e);\n        }\n    }\n\n    componentDidMount() {\n        this.getClients();\n    }  \n\n    compareFilterTopInvoices(a, b){\n        if(a.dueAmount < b.dueAmount) return 1;\n        if(a.dueAmount > b.dueAmount) return -1;\n        return 0;\n    }\n\n    // Sorts in desc order based on dueAmount. Returns only top 5 results\n    filterTopInvoices(){\n        let invoices = this.state.topInvoices;\n        invoices.sort(this.compareFilterTopInvoices);\n        return invoices.slice(0,5);\n    }\n\n    viewDetails(invoice) {\n        this.props.history.push({\n            pathname: '/view-invoice/',\n            state: { invoice: invoice }\n        })\n    }\n    async updateWorkStatus(invoiceId) {\n        const result = await ApiService.patchAuth(`/invoice/${invoiceId}/`, {workCompleted: \"true\", note: \"some note\"}, window.localStorage.getItem(\"token\"));\n        console.log(result)\n        if(result) {\n            this.dialog.showAlert('Success!');\n            window.location.reload();\n        }\n        else {\n            this.dialog.showAlert('Something went wrong!');\n        }\n    }\n    render() {       \n        let topPendingInvoices = [];\n        let clients = [];\n        let blockedClients = [];\n\n\n        let invoices = this.filterTopInvoices();\n        // let pendingInvoices = \n        invoices.forEach(invoice => {\n            topPendingInvoices.push(\n                <tr className=\"unread\" key = {invoice.id}>\n                    <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\n                    <td>\n                        <h6 className=\"mb-1\">{invoice.clientName}</h6>\n                        <p className=\"m-0\">{invoice.clientEmail}</p>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-green f-10 m-r-15\"/>{invoice.invoiceDate}</h6>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\"><i className=\"fa fa-circle text-c-red f-10 m-r-15\"/>{invoice.dueDate}</h6>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">Work Status: &nbsp; \n                        {\n                            invoice.workCompleted &&\n                            <span className=\"text-success\">Completed</span>\n                        }\n                        {\n                            !invoice.workCompleted &&\n                            <span className=\"text-danger\">Not Completed</span>\n                        }\n                        </h6>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">{invoice.dueAmount} INR due</h6>\n                    </td>\n                    <td>\n                        <button style={{border: 0}} onClick={() => this.viewDetails(invoice)} className=\"label theme-bg2 text-white f-12\">View Details</button>\n                        <button style={{border: 0}} onClick={() => this.updateWorkStatus(invoice.id)} className=\"label theme-bg text-white f-12\">\n                            {\n                                !invoice.workCompleted &&\n                                \"Update Progress\"\n                            }\n                            {\n                                invoice.workCompleted &&\n                                \"Delete Progress\"\n                            }                            \n                        </button>\n                        <button style={{border: 0}} onClick={() => {this.dialog.showAlert(\"Reminder sent!\")}} className=\"label theme-bg text-white f-12\">Remind</button>\n                        <Dialog ref={(component) => { this.dialog = component }} />\n                    </td>\n                </tr>\n            );\n        })\n\n        this.state.clients.forEach(client => {\n            if(!client.data.blocked) {\n                clients.push(\n                <tr className=\"unread\" key = {client.id}>\n                    <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\n                    <td>\n                        <p className=\"m-0\">{client.data.username}</p>\n                    </td>\n                    <td>\n                        <p className=\"m-0\">{client.data.company_name}</p>\n                    </td>\n                    <td>\n                        <p className=\"m-0\">{client.data.email}</p>\n                    </td>\n                    <td>\n                        <p className=\"m-0\">Discount: {client.data.discount}%</p>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">{client.data.numInvoices} Invoices</h6>\n                    </td>\n                    <td>\n                        <Link to={'/clients/'+client.data.clientId} className=\"label theme-bg text-white f-12\">View Details</Link>\n                    </td>\n                </tr>\n                );\n            }\n            else {\n                blockedClients.push(\n                <tr className=\"unread\" key = {client.id}>\n                    <td><img className=\"rounded-circle\" style={{width: '40px'}} src={avatar2} alt=\"activity-user\"/></td>\n                    <td>\n                        <p className=\"m-0\">{client.data.username}</p>\n                    </td>\n                    <td>\n                        <p className=\"m-0\">{client.data.company_name}</p>\n                    </td>\n                    <td>\n                        <p className=\"m-0\">{client.data.email}</p>\n                    </td>\n                    <td>\n                        <p className=\"m-0\">{client.data.discount}</p>\n                    </td>\n                    <td>\n                        <h6 className=\"text-muted\">{client.data.numInvoices} Invoices</h6>\n                    </td>\n                    <td>\n                        <Link to={'/clients/'+client.data.clientId} className=\"label theme-bg text-white f-12\">View Details</Link>\n                    </td>\n                </tr>\n                );\n            }\n        });\n\n        return (\n            <Aux>\n                <Row>\n                    {/* Row 1 */}\n                    <Col md={6} xl={4}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>Total Invoices Generated</h6>\n                                <div className=\"row d-flex align-items-center\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-file-text f-30 m-r-5\"/>{this.state.topInvoices.length}</h3>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={6} xl={4}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>Total Pending Invoices</h6>\n                                <div className=\"row d-flex align-items-center\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-file-text text-c-red f-30 m-r-5\"/>{topPendingInvoices.length}</h3>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={4}>\n                        <Card>\n                            <Card.Body>\n                                <h6 className='mb-4'>Total Clients</h6>\n                                <div className=\"row d-flex align-items-center\">\n                                    <div className=\"col-9\">\n                                        <h3 className=\"f-w-300 d-flex align-items-center m-b-0\"><i className=\"feather icon-users f-30 m-r-5\"/> {this.state.clients.length}</h3>\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    {/* Row 2 */}\n                    <Col md={6} xl={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title as=\"h5\">Types of Invoices Raised <small>Distribution</small></Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                            <NVD3Chart id=\"chart\" height={300} type=\"pieChart\" datum={pieChartData} x=\"key\" y=\"y\"  />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={6} xl={6}>\n                        <Card className='Recent-Users'>\n                            <Card.Header>\n                                <Card.Title as='h5'>Invoices Raised<small> [In last 10 days]</small></Card.Title>\n                            </Card.Header>\n                            <Card.Body className=\"text-center\">\n                                <div>\n                                    {\n                                        React.createElement(NVD3Chart, {\n                                            xAxis: {\n                                                tickFormat: function(d){ return d; },\n                                                axisLabel: 'Time (days)'\n                                            },\n                                            yAxis: {\n                                                axisLabel: 'Invoices Count',\n                                                tickFormat: function(d) {return parseFloat(d).toFixed(2); }\n                                            },\n                                            type:'lineChart',\n                                            datum: lineChart(),\n                                            x: 'x',\n                                            y: 'y',\n                                            height: 300,\n                                            renderEnd: function(){\n                                                console.log('renderEnd');\n                                            }\n                                        })\n                                    }\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    \n                    {/* Row 3 */}\n                    <Col md={12} xl={12}>\n                        <Card className='Recent-Users'>\n                            <Card.Header>\n                                <Card.Title as='h5'>Most Important Invoices</Card.Title>\n                            </Card.Header>\n                            <Card.Body className='px-0 py-2'>\n                            <Table responsive hover>\n                            <tbody>\n                                {topPendingInvoices}\n                            </tbody>\n                            </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    {/* Row 4 */}\n                    <Col md={12} xl={12}>\n                        <Card className='Recent-Users'>\n                            <Card.Header>\n                                <Card.Title as='h5'>Clients <Link to=\"/add-client/\"><i className=\"feather icon-plus-circle f-15 m-r-5\"/></Link></Card.Title>\n                            </Card.Header>\n                            <Card.Body className='px-0 py-2'>\n                            <Table responsive hover>\n                            <tbody>\n                                {clients}\n                            </tbody>\n                            </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n\n                    {/* Row 5 */}\n                    <Col md={12} xl={12}>\n                        <Card className='Recent-Users justify-content-center text-center'>\n                            <Card.Header>\n                                <Button onClick={() => this.setState({ isBlockedClientsCollapsed: !this.state.isBlockedClientsCollapsed })}>\n                                {\n                                    !this.state.isBlockedClientsCollapsed &&\n                                    \"View Blocked clients\"\n                                }\n                                {\n                                    this.state.isBlockedClientsCollapsed &&\n                                    \"Close Blocked clients\"\n                                }\n                                </Button>\n                            </Card.Header>\n                            <Collapse in={this.state.isBlockedClientsCollapsed}>\n                                <div id=\"basic-collapse\">\n                                    <Card.Body className='px-0 py-2'>\n                                        <Table responsive hover>\n                                            <tbody>\n                                                {blockedClients}\n                                            </tbody>\n                                        </Table>\n                                    </Card.Body>\n                                </div>\n                            </Collapse>\n                        </Card>\n                    </Col>\n\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nexport default Dashboard;","import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\nclass ApiService {\n\n\n    get(url) {\n        return axios.get(API_BASE_URL + url);\n    }\n\n    getAuth(url,  token) {\n        return axios.get(API_BASE_URL + url,\n            { headers: {\n                Authorization: 'Token ' + token}\n            });\n    }\n\n    post(url, data) { \n        return axios.post(API_BASE_URL + url, data);\n    }\n\n    postAuth(url, data, token) {\n        return axios.post(API_BASE_URL + url, data, \n            { headers: {\n                Authorization: 'Token ' + token}\n            });\n    }\n\n    put(url, data) {\n        return axios.put(API_BASE_URL + url, data);\n    }\n\n\n    patchAuth(url, data, token) {\n        return axios.patch(API_BASE_URL + url, data, \n            { headers: {\n                Authorization: 'Token ' + token}\n            });\n    }\n\n    delete(url) {\n        return axios.delete(API_BASE_URL + url);\n    }\n}\n\nexport default new ApiService();"],"sourceRoot":""}